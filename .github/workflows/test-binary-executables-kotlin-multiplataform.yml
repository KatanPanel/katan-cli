# Test binary executable files from kotlin multiplataform build

name: 'test-binary-executables-kotlin-multiplataform'

on: 
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
  build:
    name: Build
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: linuxX64
            ext: kexe
          - os: macos-latest
            target: macosX64
            ext: kexe
          - os: windows-latest
            target: mingwX64
            ext: exe
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Build project (${{ matrix.target }})
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: ${{ matrix.target }}
          arguments: clean install
          gradle-version: wrapper
      - name: Upload artifacts
        uses: svenstaro/upload-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/bin/${{ matrix.target }}/debugExecutable/katan-cli.${{ matrix.ext }}
          asset_name: katan-cli-${{ matrix.target }}.${{ matrix.ext }}
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
